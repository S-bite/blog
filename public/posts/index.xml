<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on kaito_tateyama&#39;s blog</title>
    <link>https://www.blog.uta8a.net/posts/</link>
    <description>Recent content in Posts on kaito_tateyama&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 07 Oct 2019 03:27:50 +0900</lastBuildDate>
    
	<atom:link href="https://www.blog.uta8a.net/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>セキュリティ・ミニキャンプ in 山梨 2019 専門講座 参加記</title>
      <link>https://www.blog.uta8a.net/posts/2019-10-07-yamanashi-minicamp/</link>
      <pubDate>Mon, 07 Oct 2019 03:27:50 +0900</pubDate>
      
      <guid>https://www.blog.uta8a.net/posts/2019-10-07-yamanashi-minicamp/</guid>
      <description>2019/9/29(日)に開催された、セキュリティ・ミニキャンプ in 山梨 2019 専門講座 に参加してきました。これから、応募するまでの流れと選考課題に対する僕なりの回答、参加して僕がどう変化したのかという話を書きます。技術的な内容は薄く、気持ちの話がメインになります。
以下の結論が言いたいことで、後は自分の備忘録みたいなものです。
結論: 22歳未満の方はセキュリティ・キャンプ全国へ、25歳以下の方はセキュリティ・ミニキャンプ地方へ行きましょう。
セキュリティ・キャンプとは よく「セキュキャン」と略されます。Twitterの検索で「#seccamp」を見ると様々なセキュキャン、ミニキャンのツイートが見られます。
セキュリティ・キャンプの公式から「全国大会」(セキュキャン)、「地方大会」(ミニキャン)に飛ぶと、全国大会は年に1回開催で22歳以下の人が応募可能、地方大会は月1くらいの頻度で全国各地で開催されていて、一般講座(年齢制限なし)と専門講座(25歳まで)に分かれています。
年齢制限があるのがつらいところですが、10万円を払ってセキュリティキャンプ会員プログラムの個人メンバーになると、どの年齢でも全国大会、地方大会の見学(事前学習や講義中の質問はできない)を行うことができます。
個人的な思いとしては、セキュキャンの存在を知ったときにはもう応募できない年齢になっていたのでもっと多くの人、特にセキュキャンが対象とする「熱意を持って行動している人(知識の多さやいわゆる強さとは関係ない)」の元に情報が届いてほしいなと思っています。
参加2ヶ月前 このあたりで山梨ミニキャンプの募集がはじまったと思います。内容を見て、講師が以前から知っていた うーちゃんさん(@uchan_nos) だったのであー！この人の講義受けてみたかったんだ！！！という気持ちになりました。それに、もう一人の講師の Yuka Takahashiさん(@00_) は、知り合いではないのですが、僕がプログラミングに興味を持ち始めた頃に東大のCPU実験の記事がバズっているのを見て一方的に尊敬していて、LLVMとかGSoCとか、そもそも海外にインターンに行く選択肢があって、同世代の人がそれをやっているんだということをこの方の発信している情報から知りました。僕は強い人を見ると「この人の強さはどこから来るんだろう」「この人の興味関心や、人間を突き動かす原動力はなんなんだろう」ということをよく考えるのですが、この方の講義を受ければ何か自分が強くなるヒントが得られるかもしれないという思いで、絶対に参加してやると気合を入れました。
気合を入れた割に何をすればよいかわからず、とりあえずC言語の経験がそんなにないので低レイヤを知りたい人のためのCコンパイラ作成入門をしました。分割コンパイルとリンクを終了して、四則演算くらいしかできない状態で定期テストが入り、夏休みに入りいろいろ他の勉強をしていたら時間が過ぎていきました。
参加1ヶ月前 応募課題の締切が迫っていました。タイガー本を少し読んだりはしましたが、応募課題の技術的なところはかなりしょぼいことになると思ったので、割と素直にできないことはできない、僕ができるのはこういうことだ、ということを書きました。応募した内容の全文はこちらです。
僕はプログラミングの世界に入ってまだ1年半くらい(記事執筆時点)なのでずっとTwitterのTLに流れてくる情報駆動で成長してきました。多くの人から影響を受けてきた中で、低レイヤではuint256_tさん(@uint256_t)からかなり影響を受けました。彼はこれまでブラウザやJavaScript Engine, JVMや.NET処理系をRustで自作しています。僕はNaglfarのコードを読んだり、そこから興味が広がってservo(firefoxのブラウザエンジン)のコードを読んでいくうちに、普段当たり前と思っているレイヤが自分の手で作れる可能性があることに感動しました。たぶんここからOS自作とかCコンパイラ自作といった分野に興味が湧いたんだと思います。
参加前、事前課題 LLVMでミニキャン言語を作ろう！の方は事前課題の内容が公開されています。
https://github.com/yamaguchi1024/mc-lang-1
https://github.com/yamaguchi1024/mc-lang-2
https://github.com/yamaguchi1024/mc-lang-3
Kaleidoscopeがベースなのでそちらを参考にすると進めやすいと思います。
UEFIでOSの力を借りずにELFを起動の方は公開されていません。EDK2でUEFIアプリケーションを作るをやってみるとよいと思います。
実際取り組んでみた感想です。
どちらも最初に3週間でこんな内容をやるよ、というロードマップを示されていたので気持ちとしては見通しを持ててよかったです。
LLVMの方は最初丁寧な誘導がついていたのでサクサク進みました。しかし、一回目の課題が終わったときに、これでは本質に迫れないまま次の課題が来て、苦戦してしまうことが想像できたのでKaleidoscopeを読んで誘導無しで第2回課題相当の内容を実装しました。これがとてもよかったようで、残りの2,3回課題はサクッと実装できました。
UEFIの方はかなり時間を費やして苦戦しました。低レイヤ特有の、「なぜか正常表示をしているのにクラッシュする」(いやコンパイル時に不審な挙動は極力ブロックしてくださいC言語さん&amp;hellip;)とか、「うまくプログラムが終了するのにファイルに書き込まれない」などの謎挙動を様々な方法で原因特定しようとしたり、仕様書を読んでプログラミングする必要がある、といったことを体験しました。情報量が少ないので、高レイヤでの「ググったらいい例が載ってるブログがヒットしてコピペして終了！←よくない」ができないんですね。個人的にこのへんは体験したかったことなので満足です。
当日 当日は怒涛の勢いで時間が過ぎていったのでほとんど書くことがありません。LLVMの方は、発表が押して僕はお昼ご飯の時間に発表をしました。緊張で震えていたのでうまくできたか分かりませんが、もっともっと場数を踏みたいなと感じました。LTとかで経験を重ねたい。
うーちゃんさんの講義はポインタの理解を深めるもので、アセンブリから理解すると理解しやすいというのは本当にそうだなあと感じました。残り時間はもくもくと超発展課題をやっていましたが進捗は無でした&amp;hellip;
後はチューター(というかサポートスタッフかな)の方で、僕のハンドルネームを知っている方がいたのが驚きでした。僕はその方の発信している情報、スライドとかで勉強していたのでうお〜なんで俺のこと知っとるんやなんで？？？？嬉しいもっと強くなりてえええ、みたいな気持ちになりました。強くなりたいね。
本当はもっと講師の方やチューターの方、参加した方々とお話したかったのですが時間もなくそれは叶いませんでした。Yuka Takahashiさんともうちょっと話してみたかった&amp;hellip;なんでLLVMに興味を持ったのか、現在の興味関心の移り変わりはどういう経緯なのか、これから先どういうところに興味があるのかとか、いろいろ聞きたいことがあったのですが&amp;hellip;悲しい。でも講義を受けることができた事自体がとても幸運ですね。感謝。
終わった後何人か時間のある参加者でなんとなく集まってサイゼリヤに行きました。ここで進捗が生えて超発展課題が少し進みました。嬉しい。いろいろお話できて楽しかったです。やっぱり自分と違うことをしている人、自分より強い人とお話するのは楽しい。
次の日 フライトまで時間があったので新宿の紀伊国屋書店に行きました。コンパイラというコーナーがあって驚きました。蟻本とかドラゴンブックとか、あと驚いたのはラムダノート出版の本(IPv6)があったことですね。流石都会だ&amp;hellip;
その後は新宿ピカデリーでViolet Evergarden外伝を見ました。ポロポロ泣いてしまったのですがそのまま電車に乗り羽田空港へ行き、帰宅しました。
参加して何が変わったか ここでは、応募用紙に書いたことを振り返って、今どう感じているかを書きます。
まず、技術的な内容を書いてミニキャンプ参加者以外の方に情報を届けたいという当初の思いは難しいことが分かりました。もっともっと強くなって自信と裏打ちされた知識がなければ語れないレベルのことを事前課題としてやったと思います。今でも正直すべてを理解している気がしません。でも何かを発信したいと思ったので、ツイキャスでスライド発表したり、大学の友人にミニキャン言語のバイナリをUEFIから動かす話をしたりしました。もう少し進めて自分オリジナルの成果を出して世に送り出したいという気持ちが強まっています。
次に、「低レイヤで何かひとつのものを作り上げるのはとても難しい」という気持ちですが、これは今も変わりません。しかし、今回の事前課題を通して、今の自分ならある程度何かを作ることができる、という自信がつきました。仕様書を読むことへの抵抗感がなくなり、手探りでも低レイヤ特有のデバッグの仕方が(雰囲気)分かるようになりました。今度はきっと挫折しないと思います。挫折は様々なことに時間を割くから生じるのであって、自分の自由な時間はとりあえずこれをやる、と決めてずっとそのことを考えればうまくいくということも知りました。また「成功体験を得たい」と書いたのですが、講師の方に褒められたり、発展課題をやりきったことによる喜び、自信が成功体験になったと思います。
役立てたいことについては、セキュリティキャンプの運営の方が言っていたことが心に残っていて、「講師を生み出すことも目標」というのがいいなあと思いました。僕も何か自分の知識の一部をまだそれを知らない人に届ける活動がしたいと思いました。
というわけで、具体的には次のようなことをやっていこうと思っています。
- 学内/学外で勉強会を開く: 今回の体験を通してやはり人間に会うことや、発表する、教えるために周辺知識を学ぶことの重要性を実感しました。今週から実際に学内で2つ、初心者向けWeb勉強会と、コンテストに向けての少人数での勉強会を始めます。
- 低レイヤのための～のCコンパイラを進める。: やりきった感じが味わえるのはきっとセルフホストとかなんでしょうけど、僕には難しそうです。でも少しずつやっていきます。
- LLVMなどの大規模なソースコードを読む: 大規模なプロジェクトに興味が湧きました。Servo, V8なども読んでみたいです。
- UEFI超発展課題をやる: 今は仕様書を読んでいるところです。ソースコードがきれいではないのでリファクタリングもしたいし、OpenProtocolを使っての実装もやりたいです。
- 海外のインターンに応募だけしてみる: GSoCなどもこれに含めます。Yuka Takahashiさんが「海外のインターンに応募してみましょう！」と言っていて、いや～俺には無理だと思っていましたが、よくよく考えてみると応募するだけなら準備は大変ですができそうです。僕は普段田舎民なのでこんなところにはIT企業への切符は落ちてないとよく嘆くのですが、海外ならきっと東京であろうが田舎であろうが実力で見てくれるはずです(想像ですが)。とりあえず募集を探してみようと思います。</description>
    </item>
    
    <item>
      <title>LTに向けた資料たち</title>
      <link>https://www.blog.uta8a.net/posts/2019-08-25-lt/</link>
      <pubDate>Sun, 25 Aug 2019 21:51:45 +0900</pubDate>
      
      <guid>https://www.blog.uta8a.net/posts/2019-08-25-lt/</guid>
      <description> そろそろブログの整理をしないといけない
今回は、PowerPointでいい感じのスライドを作ろうとしたお話
デザイン デザイン能力がないので、シンプルでいい感じのテンプレートを探した -&amp;gt; AZUSA COLORS
これこれ！エンジニアのLTスライドで見たことある！
でもKeynoteかぁ…
AZUSA COLORS 改
うおお！PowerPointでできる！
下のようになりました
(ここに完成スライド(公表用)が入る)
こんなのを作って上下に雑に貼った
後で見る  https://github.com/webslides/webslides/ Web技術を使ったスライド。reveal.jsを使っていたけど、今どきだとMarpなのかな？と思いつつ触ってない
 https://stocker.jp/diary/keynote/ なんか大事なことが書いてそう
 https://sanographix.net azusaの原作者。konel.mag issue 5がポートフォリオの話で200円と安いので後で買う。
 https://jp.stanby.com/media/howto-lightningtalks/ これも後で見る。話し方
 https://qiita.com/moomooya/items/45398e06f189d4a26227 LTの周りのリソース集
  </description>
    </item>
    
    <item>
      <title>木の作り方</title>
      <link>https://www.blog.uta8a.net/posts/2019-08-19-tree-creation/</link>
      <pubDate>Mon, 19 Aug 2019 17:44:24 +0900</pubDate>
      
      <guid>https://www.blog.uta8a.net/posts/2019-08-19-tree-creation/</guid>
      <description>ABC138D Kiを本番で嘘解法で通してしまった(after_contestで気づいた)ので、ACコードと自分のコードにランダムにケースを入れてHackケースを探そう！と思いました。このとき、木のテストケースの作り方が分からなかったのでTwitterで教えてもらいました。以下、それらをまとめておきます。意見をくださった方、ありがとうございます。
便利なツール グラフの可視化にはGRAPH×GRAPH が便利です。
木を順に構成する Python3で書きました。
import itertools, random N = 11 R = 10 l = list(range(1,N)) h = list(itertools.permutations(l)) seed = list(h[R]) graph = [] edge = [] for i in seed: if len(graph) != 0: edge.append([i, graph[random.randrange(len(graph))]]) graph.append(i) print(edge) for i in edge: print(&amp;quot;{} {}&amp;quot;.format(i[0], i[1]))  output
[[2, 1], [3, 1], [4, 2], [5, 3], [6, 2], [8, 4], [10, 4], [7, 2], [9, 2]] 2 1 3 1 4 2 5 3 6 2 8 4 10 4 7 2 9 2  GRAPH×GRAPHでの結果</description>
    </item>
    
    <item>
      <title>InterKosenCTF 2019 Writeup</title>
      <link>https://www.blog.uta8a.net/posts/2019-08-13-interkosenctf2019/</link>
      <pubDate>Tue, 13 Aug 2019 07:12:48 +0900</pubDate>
      
      <guid>https://www.blog.uta8a.net/posts/2019-08-13-interkosenctf2019/</guid>
      <description>InterKosenCTF2019にmitsuさんと二人で、チーム StarrySky として参加しました。成績はチームで13位/91人が正の得点、個人では12位でした。得点は、4332ptsのうち2944ptsを入れました。
勝手にライバルだと思っている おたまこうせん, Wani Hackase, 生活習慣崩壊ズ, Contrailには完敗です。今回Contrail強かったですね&amp;hellip;
PwnとWebが課題ですね
safermとE-Sequel-Injectionが通せたのは嬉しかったです
うごくペンギンさんかわいいです
Writeup Welcome [200pts, 77solved, warmup, welcome]
Slackでflagがアナウンスされました
KosenCTF{g3t_r34dy_f0r_InterKosenCTF_2019}
Kurukuru Shuffle [200pts, 53solved, easy, crypto]
shuffle.pyを見ると、ランダムに0からL-1の数字を3つ作り、それをもとにしてflagの2つの文字のswapをL回繰り返しています。ランダムが出てきたときは、全探索するか、ランダムな数値をいっぱいとってきて次が予測できないか、結果からのエスパーのどれかを考えるとよさそうなので、全探索を考えます。
L=53とsecret.pyから分かるので、$O(L^3)$をしても大丈夫です。a, b,kの値を全探索していきましょう。
また、iの値はk-&amp;gt;2k-&amp;gt;3k-&amp;gt;...-&amp;gt;(L+1)k(mod L)と変化し、最後の(L+1)kは使われないので、Lkからこれを逆順にたどればよいと分かります。
for k in range(1,L): for a in range(0,L): for b in range(0,L): e = list(&amp;quot;1m__s4sk_s3np41m1r_836lly_cut3_34799u14}1osenCTF{5sKm&amp;quot;) # secret i = 0 for s in range(L): i = ((L-s)*k) % L s = (i + a) % L t = (i + b) % L e[s], e[t] = e[t], e[s] # swap # encrypted = &amp;quot;&amp;quot;.</description>
    </item>
    
    <item>
      <title>My First Post</title>
      <link>https://www.blog.uta8a.net/posts/2019-08-14-test/my-first-post/</link>
      <pubDate>Tue, 13 Aug 2019 06:46:09 +0900</pubDate>
      
      <guid>https://www.blog.uta8a.net/posts/2019-08-14-test/my-first-post/</guid>
      <description>post
$$ O(N^3) $$
$1+1=2$</description>
    </item>
    
  </channel>
</rss>